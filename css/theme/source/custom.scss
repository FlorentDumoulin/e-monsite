/**
* Custom theme for a e-monsite presentation
*
* Author Florent Dumoulin
*/

// Les commentaires uni-ligne ne sont pas visibles une fois le fichier compilé

// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------


// Include theme-specific fonts
@import url(https://fonts.googleapis.com/css?family=Orbitron);
@import url(https://fonts.googleapis.com/css?family=Electrolize);


// Override theme settings (see ../template/settings.scss)
$mainColor: #CCC;
$baseColor00: #000;
$baseColor01: #FFF;
$baseColor02: #FF8800;
$baseColor03: #5CB85C;

$backgroundColor: $baseColor00;

$mainFont: 'Electrolize', sans-serif;

$linkColor: $baseColor02;
$linkColorHover: darken( $linkColor, 15% );

$headingFont: 'Orbitron', sans-serif;
$headingColor: $baseColor01;
$headingTextShadow: none;
$headingLetterSpacing: -0.03em;
$headingTextTransform: none;

$selectionBackgroundColor: $linkColor;

// Theme template ------------------------------
@import "../template/theme";
// ---------------------------------------------

/*********************************************
* CUSTOM CSS
*********************************************/
.reveal{
    
    // General
    h2, h3, h4, h5, h6{
        color: $linkColorHover;
    }
    strong, b{
        color: darken( $mainColor, 35% );
    }
    .color-secondary{
        color: $baseColor02;
    }
    ul, ol{
        display: block;
    }
    ul{
        list-style-type: square;
    }
    ol{
        margin: 0 0 0 1.5em;
    }
    
    // Fragments
    span[class*='fragment']{
        display: inline-block; // Pour pouvoir utilisé les effets dans un span sur une mm ligne
    }
    p[class*='fragment']{
        span.grow{
            strong, b{
                color: $mainColor;
                text-transform: uppercase;
            }
        }
    }
    
}
/*============================================
DASHBOARD
============================================*/
#dashboard{

    a{
        position: fixed;
        z-index: 999;
        left: 0;
        bottom: 10%;
        padding: 0.5em;
        color: rgb(66, 91, 138);
        @include diagonal-gradient( 225deg, rgba(22,32,42,0.95), 0%, rgba(13,19,26,0.95), 77% );
        border: 4px double #1b2733;
        border-left: none;
        @include prefix('box-shadow', '1px 1px 3px' $baseColor00, webkit);
        @include prefix('transition', '240ms', webkit);

        &:hover, &:focus{
            padding: 0.5em 1em;
            color: rgb(103, 142, 214);
        }

        i{
            @include prefix('animation', 'back-arrow 5s ease-out infinite', webkit);
            //propriété css + la valeur + les préfixes vendeurs qu'on veut (sinon tous les préfixes définis dans son mixin seront appliqués)
            //si on met pas FALSE en dernier paramètre, la propriété sans préfixe sera aussi générée
        }

    }

}
@include keyframes(back-arrow) { // Utilise le mixin pour préfixer les keyframes, mixins importés plus haut
    5% { transform: translateX(-4px); }
    10% { transform: translateX(2px);}
    0%, 15%, 100% { transform: translateX(0px); }
}